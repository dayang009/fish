<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxl.job.admin.dao.XxlJobGroupDao">

	<resultMap id="XxlJobGroup" type="com.xxl.job.admin.core.model.XxlJobGroup">
		<result column="id" property="id"/>
		<result column="app_name" property="appname"/>
		<result column="title" property="title"/>
		<result column="address_type" property="addressType"/>
		<result column="address_list" property="addressList"/>
		<result column="update_time" property="updateTime"/>
	</resultMap>

	<sql id="Base_Column_List">
		t.id,
		t.app_name,
		t.title,
		t.address_type,
		t.address_list,
		t.update_time
	</sql>

	<select id="findAll" resultMap="XxlJobGroup">
		select
		<include refid="Base_Column_List"/>
		from xxl_job_group as t
		order by t.app_name, t.title, t.id
	</select>

	<select id="findByAddressType" parameterType="java.lang.Integer" resultMap="XxlJobGroup">
		select
		<include refid="Base_Column_List"/>
		from xxl_job_group as t
		where t.address_type = #{addressType}
		order by t.app_name, t.title, t.id
	</select>

	<insert id="save" parameterType="com.xxl.job.admin.core.model.XxlJobGroup" useGeneratedKeys="true" keyProperty="id">
		insert into xxl_job_group (app_name, title, address_type, address_list, update_time)
		values (#{appname}, #{title}, #{addressType}, #{addressList}, #{updateTime});
	</insert>

	<update id="update" parameterType="com.xxl.job.admin.core.model.XxlJobGroup">
		update xxl_job_group
		set app_name     = #{appname},
			title        = #{title},
			address_type = #{addressType},
			address_list = #{addressList},
			update_time  = #{updateTime}
		where id = #{id}
	</update>

	<delete id="remove" parameterType="java.lang.Integer">
		delete
		from xxl_job_group
		where id = #{id}
	</delete>

	<select id="load" parameterType="java.lang.Integer" resultMap="XxlJobGroup">
		select
		<include refid="Base_Column_List"/>
		from xxl_job_group as t
		where t.id = #{id}
	</select>

	<select id="pageList" parameterType="java.util.HashMap" resultMap="XxlJobGroup">
		select
		<include refid="Base_Column_List"/>
		from xxl_job_group as t
		<trim prefix="where" prefixOverrides="and | OR">
			<if test="appname != null and appname != ''">
				and t.app_name like concat(concat('%', #{appname}::text), '%')
			</if>
			<if test="title != null and title != ''">
				and t.title like concat(concat('%', #{title}::text), '%')
			</if>
		</trim>
		order by t.app_name, t.title, t.id
		limit #{pagesize} offset #{offset}
	</select>

	<select id="pageListCount" parameterType="java.util.HashMap" resultType="int">
		select count(1)
		from xxl_job_group as t
		<trim prefix="where" prefixOverrides="and | OR">
			<if test="appname != null and appname != ''">
				and t.app_name like concat(concat('%', #{appname}::text), '%')
			</if>
			<if test="title != null and title != ''">
				and t.title like concat(concat('%', #{title}::text), '%')
			</if>
		</trim>
	</select>
</mapper>
