version: '3'

services:
  fish-mysql:
    image: mysql:8.0
    build:
      context: ./db
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: root
    restart: unless-stopped
    container_name: fish-mysql
    volumes:
    - ./.mysql-data:/var/lib/mysql
    - ./mysql-init:/docker-entrypoint-initdb.d #自动执行启动脚本
    ports:
    - "3306:3306"
    networks:
    - spring_cloud_default

  fish-redis:
    image: redis:6.2
    ports:
    - "6379:6379"
    restart: unless-stopped
    container_name: fish-redis
    hostname: fish-redis
    volumes:
    - ./.redis-data:/data
    networks:
    - spring_cloud_default

  rabbitmq:
    image: rabbitmq:3.12.6-management # 支持管理面板的消息队列
    container_name: fish-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
    - "5672:5672"
    - "15672:15672" # RabbitMQ Dashboard 端口
    volumes:
    - ./.rabbitmq-data:/var/lib/rabbitmq # 持久化
    networks:
    - spring_cloud_default

  nacos:
    image: nacos/nacos-server:v2.1.2-slim
    container_name: fish-nacos
    ports:
    - "8848:8848"
    volumes:
    - ./.nacos-data:/home/nacos/data
    networks:
    - spring_cloud_default
    environment:
    - MODE=standalone # 单节点模式启动
    - PREFER_HOST_MODE=hostname # 支持 hostname
    - TZ=Asia/Shanghai # 控制时区

  fish-register:
    build:
      context: ./fish-register
    restart: always
    ports:
    - "8848:8848"
    container_name: fish-register
    hostname: fish-register
    image: fish-register
    networks:
    - spring_cloud_default

  fish-gateway:
    build:
      context: ./fish-gateway
    restart: always
    ports:
    - "9999:9999"
    container_name: fish-gateway
    hostname: fish-gateway
    image: fish-gateway
    networks:
    - spring_cloud_default

  fish-auth:
    build:
      context: ./fish-auth
    restart: always
    container_name: fish-auth
    hostname: fish-auth
    image: fish-auth
    networks:
    - spring_cloud_default

  fish-upms:
    build:
      context: ./fish-upms/fish-upms-biz
    restart: always
    container_name: fish-upms
    hostname: fish-upms
    image: fish-upms
    networks:
    - spring_cloud_default

  fish-monitor:
    build:
      context: ./fish-visual/fish-monitor
    restart: always
    ports:
    - "5001:5001"
    container_name: fish-monitor
    hostname: fish-monitor
    image: fish-monitor
    networks:
    - spring_cloud_default

  fish-codegen:
    build:
      context: ./fish-visual/fish-codegen
    restart: always
    container_name: fish-codegen
    hostname: fish-codegen
    image: fish-codegen
    networks:
    - spring_cloud_default

  fish-daemon-quartz:
    build:
      context: ./fish-visual/fish-quartz
    restart: always
    image: fish-quartz
    container_name: fish-quartz
    networks:
    - spring_cloud_default

networks:
  spring_cloud_default:
    driver: bridge
