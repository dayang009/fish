server:
  port: 36901

spring:
  application:
    name: ${artifactId}
  cloud:
    nacos:
      username: ${FISH_NACOS_USERNAME:nacos}
      password: ${FISH_NACOS_PASSWORD:nacos}
      server-addr: ${FISH_NACOS_IP:localhost}:${FISH_NACOS_PORT:8848}
      config:
        enabled: true
        file-extension: yaml
        namespace: ${FISH_NACOS_NAMESPACE:dev}
        group: ${FISH_NACOS_GROUP:DEFAULT_GROUP}
        shared-configs:
        - data-id: share-fish-config.yaml
          refresh: true
        - data-id: share-fish-config-${FISH_PROFILES_ACTIVE:dev}.yaml
          refresh: true
      discovery:
        enabled: false
        namespace: ${FISH_NACOS_NAMESPACE:dev}
        group: ${FISH_NACOS_GROUP:DEFAULT_GROUP}
        metadata:
          # 发送心跳的间隔时间，单位毫秒
          preserved.heart.beat.interval: 1000
          # 多长时间内没有收到服务实例的心跳时认为该实例不可用的超时时间，单位毫秒
          preserved.heart.beat.timeout: 3000
          # 删除不健康实例的超时时间，单位毫秒
          preserved.ip.delete.timeout: 3000
    inetutils:
      ignored-interfaces:
      - VMware.*
      - VirtualBox.*
      - veth
      - docker
      - cali
      - br
    gateway:
      enabled: true
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      globalcors:
        corsConfigurations:
          '[/**]':
            # 注意这个设置只对 spring boot 2.4+ 有效，低版本 使用  allowedOrigins: "*" 属性
            allowedOriginPatterns: "*"
            allowed-methods: "*"
            allowed-headers: "*"
            allow-credentials: true
            max-age: 86400
            exposedHeaders: "Content-Disposition,Content-Type,Cache-Control"
      routes:
      - id: fish-driver-user
        uri: lb://fish-driver-user
        predicates:
        - Path=/drivers/**
        - Method=GET,POST
      - id: oauth2-service-routes
        uri: lb://oauth2-service
        predicates:
        - Path=/**
        filters:
        - PrefixPath=0


eureka:
  instance:
    # 默认为电脑名
    hostname: ${FISH_EUREKA_IP:localhost}
    # 测主机名为IP形式
    prefer-ip-address: true
    # 默认值为主机名+服务名+端口
    instance-id: ${spring.application.name}:${server.port}
  client:
    enabled: true
    service-url:
      defaultZone: http://${FISH_EUREKA_IP:localhost}:${FISH_EUREKA_PORT:8761}/eureka/


logging:
  level:
    org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping: debug
    org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler: debug
    org.springframework.core.codec.CharSequenceEncoder: debug


knife4j:
  gateway:
    enabled: true
    # 排序规则(tag/operation排序自4.2.0版本新增)
    # 取值：alpha-默认排序规则，官方swagger-ui默认实现,order-Knife4j提供的增强排序规则，开发者可扩展x-order，根据数值来自定义排序
    tags-sorter: order
    operations-sorter: order
    # 指定服务发现的模式聚合微服务文档，并且是默认`default`分组
    strategy: discover
    discover:
      enabled: true
      version: openapi3

management:
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: "*"

